{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"MkDocs Material Boilerplate - Starter Kit Details \u00b6 Read more \ud83d\udc49 Documentation - MkDocs Material Boilerplate Quick start \u00b6 git clone https://github.com/peaceiris/mkdocs-material-boilerplate.git cd mkdocs-material-boilerplate pipenv sync --dev pipenv shell inv serve --config-file mkdocs-sample.yml Links \u00b6 mkdocs/mkdocs: Project documentation with Markdown - GitHub squidfunk/mkdocs-material: A Material Design theme for MkDocs License \u00b6 MIT License The graduate cap icon made by Freepik from www.flaticon.com is licensed by CC 3.0 BY About Maintainer \u00b6 peaceiris Homepage","title":"Home"},{"location":"#details","text":"Read more \ud83d\udc49 Documentation - MkDocs Material Boilerplate","title":"Details"},{"location":"#quick_start","text":"git clone https://github.com/peaceiris/mkdocs-material-boilerplate.git cd mkdocs-material-boilerplate pipenv sync --dev pipenv shell inv serve --config-file mkdocs-sample.yml","title":"Quick start"},{"location":"#links","text":"mkdocs/mkdocs: Project documentation with Markdown - GitHub squidfunk/mkdocs-material: A Material Design theme for MkDocs","title":"Links"},{"location":"#license","text":"MIT License The graduate cap icon made by Freepik from www.flaticon.com is licensed by CC 3.0 BY","title":"License"},{"location":"#about_maintainer","text":"peaceiris Homepage","title":"About Maintainer"},{"location":"license/","text":"License \u00b6 MIT License The graduate cap icon made by Freepik from www.flaticon.com is licensed by CC 3.0 BY","title":"License"},{"location":"license/#license","text":"MIT License The graduate cap icon made by Freepik from www.flaticon.com is licensed by CC 3.0 BY","title":"License"},{"location":"tsr/","text":"Terminate and Stay Resident \u00b6 Old computer stuff worthing mentioning \u00b6 mkdocs/mkdocs: Project documentation with Markdown - GitHub Material for MkDocs \u00b6 squidfunk/mkdocs-material: A Material Design theme for MkDocs","title":"Terminate and Stay Resident"},{"location":"tsr/#terminate_and_stay_resident","text":"","title":"Terminate and Stay Resident"},{"location":"tsr/#old_computer_stuff_worthing_mentioning","text":"mkdocs/mkdocs: Project documentation with Markdown - GitHub","title":"Old computer stuff worthing mentioning"},{"location":"tsr/#material_for_mkdocs","text":"squidfunk/mkdocs-material: A Material Design theme for MkDocs","title":"Material for MkDocs"},{"location":"extensions/code-hilite/","text":"CodeHilite \u00b6 CodeHilite - Material for MkDocs Supported languages - Pygments Configure mkdocs.yml \u00b6 markdown_extensions: - codehilite","title":"Code Hilite"},{"location":"extensions/code-hilite/#codehilite","text":"CodeHilite - Material for MkDocs Supported languages - Pygments","title":"CodeHilite"},{"location":"extensions/code-hilite/#configure_mkdocsyml","text":"markdown_extensions: - codehilite","title":"Configure mkdocs.yml"},{"location":"extensions/footnote/","text":"Footnote \u00b6 Footnotes - Material for MkDocs Configure mkdocs.yml \u00b6 markdown_extensions: - footnotes Example \u00b6 Footnote example 1. 1 Footnote example 2. 2 One line \u21a9 First line Second line \u21a9","title":"Footnote"},{"location":"extensions/footnote/#footnote","text":"Footnotes - Material for MkDocs","title":"Footnote"},{"location":"extensions/footnote/#configure_mkdocsyml","text":"markdown_extensions: - footnotes","title":"Configure mkdocs.yml"},{"location":"extensions/footnote/#example","text":"Footnote example 1. 1 Footnote example 2. 2 One line \u21a9 First line Second line \u21a9","title":"Example"},{"location":"extensions/mathjax/","text":"MathJax \u00b6 PyMdown - Material for MkDocs Configure mkdocs.yml \u00b6 markdown_extensions: - mdx_math: enable_dollar_delimiter: True Example code \u00b6 $$ P \\c dot Q = \\| P \\|\\| Q \\|\\c os \\a lpha $$ Example rendering \u00b6 P\\cdot Q = \\|P\\|\\|Q\\|\\cos\\alpha","title":"MathJax"},{"location":"extensions/mathjax/#mathjax","text":"PyMdown - Material for MkDocs","title":"MathJax"},{"location":"extensions/mathjax/#configure_mkdocsyml","text":"markdown_extensions: - mdx_math: enable_dollar_delimiter: True","title":"Configure mkdocs.yml"},{"location":"extensions/mathjax/#example_code","text":"$$ P \\c dot Q = \\| P \\|\\| Q \\|\\c os \\a lpha $$","title":"Example code"},{"location":"extensions/mathjax/#example_rendering","text":"P\\cdot Q = \\|P\\|\\|Q\\|\\cos\\alpha","title":"Example rendering"},{"location":"getting-started/Readme/","text":"Istio \u00b6 An open platform to connect, manage, and secure microservices. For in-depth information about how to use Istio, visit istio.io To ask questions and get assistance from our community, visit discuss.istio.io To learn how to participate in our overall community, visit our community page In this README: Introduction Repositories Issue management In addition, here are some other documents you may wish to read: Istio Community - describes how to get involved and contribute to the Istio project Istio Developer's Guide - explains how to set up and use an Istio development environment Project Conventions - describes the conventions we use within the code base Creating Fast and Lean Code - performance-oriented advice and guidelines for the code base You'll find many other useful documents on our Wiki . Introduction \u00b6 Istio is an open platform for providing a uniform way to integrate microservices , manage traffic flow across microservices, enforce policies and aggregate telemetry data. Istio's control plane provides an abstraction layer over the underlying cluster management platform, such as Kubernetes. Istio is composed of these components: Envoy - Sidecar proxies per microservice to handle ingress/egress traffic between services in the cluster and from a service to external services. The proxies form a secure microservice mesh providing a rich set of functions like discovery, rich layer-7 routing, circuit breakers, policy enforcement and telemetry recording/reporting functions. Note: The service mesh is not an overlay network. It simplifies and enhances how microservices in an application talk to each other over the network provided by the underlying platform. Istiod - The Istio control plane. It provides service discovery, configuration and certificate management. It consists of the following sub-components: Pilot - Responsible for configuring the proxies at runtime. Citadel - Responsible for certificate issuance and rotation. Galley - Responsible for validating, ingesting, aggregating, transforming and distributing config within Istio. Operator - The component provides user friendly options to operate the Istio service mesh. Repositories \u00b6 The Istio project is divided across a few GitHub repositories: istio/api . This repository defines component-level APIs and common configuration formats for the Istio platform. istio/community . This repository contains information on the Istio community, including the various documents that govern the Istio open source project. istio/istio . This is the main code repository. It hosts Istio's core components, install artifacts, and sample programs. It includes: istioctl . This directory contains code for the istioctl command line utility. operator . This directory contains code for the Istio Operator . pilot . This directory contains platform-specific code to populate the abstract service model , dynamically reconfigure the proxies when the application topology changes, as well as translate routing rules into proxy specific configuration. security . This directory contains security related code, including Citadel (acting as Certificate Authority), citadel agent, etc. istio/proxy . The Istio proxy contains extensions to the Envoy proxy (in the form of Envoy filters) that support authentication, authorization, and telemetry collection. Issue management \u00b6 We use GitHub to track all of our bugs and feature requests. Each issue we track has a variety of metadata: Epic . An epic represents a feature area for Istio as a whole. Epics are fairly broad in scope and are basically product-level things. Each issue is ultimately part of an epic. Milestone . Each issue is assigned a milestone. This is 0.1, 0.2, ..., or 'Nebulous Future'. The milestone indicates when we think the issue should get addressed. Priority . Each issue has a priority which is represented by the column in the Prioritization project. Priority can be one of P0, P1, P2, or >P2. The priority indicates how important it is to address the issue within the milestone. P0 says that the milestone cannot be considered achieved if the issue isn't resolved.","title":"Istio"},{"location":"getting-started/Readme/#istio","text":"An open platform to connect, manage, and secure microservices. For in-depth information about how to use Istio, visit istio.io To ask questions and get assistance from our community, visit discuss.istio.io To learn how to participate in our overall community, visit our community page In this README: Introduction Repositories Issue management In addition, here are some other documents you may wish to read: Istio Community - describes how to get involved and contribute to the Istio project Istio Developer's Guide - explains how to set up and use an Istio development environment Project Conventions - describes the conventions we use within the code base Creating Fast and Lean Code - performance-oriented advice and guidelines for the code base You'll find many other useful documents on our Wiki .","title":"Istio"},{"location":"getting-started/Readme/#introduction","text":"Istio is an open platform for providing a uniform way to integrate microservices , manage traffic flow across microservices, enforce policies and aggregate telemetry data. Istio's control plane provides an abstraction layer over the underlying cluster management platform, such as Kubernetes. Istio is composed of these components: Envoy - Sidecar proxies per microservice to handle ingress/egress traffic between services in the cluster and from a service to external services. The proxies form a secure microservice mesh providing a rich set of functions like discovery, rich layer-7 routing, circuit breakers, policy enforcement and telemetry recording/reporting functions. Note: The service mesh is not an overlay network. It simplifies and enhances how microservices in an application talk to each other over the network provided by the underlying platform. Istiod - The Istio control plane. It provides service discovery, configuration and certificate management. It consists of the following sub-components: Pilot - Responsible for configuring the proxies at runtime. Citadel - Responsible for certificate issuance and rotation. Galley - Responsible for validating, ingesting, aggregating, transforming and distributing config within Istio. Operator - The component provides user friendly options to operate the Istio service mesh.","title":"Introduction"},{"location":"getting-started/Readme/#repositories","text":"The Istio project is divided across a few GitHub repositories: istio/api . This repository defines component-level APIs and common configuration formats for the Istio platform. istio/community . This repository contains information on the Istio community, including the various documents that govern the Istio open source project. istio/istio . This is the main code repository. It hosts Istio's core components, install artifacts, and sample programs. It includes: istioctl . This directory contains code for the istioctl command line utility. operator . This directory contains code for the Istio Operator . pilot . This directory contains platform-specific code to populate the abstract service model , dynamically reconfigure the proxies when the application topology changes, as well as translate routing rules into proxy specific configuration. security . This directory contains security related code, including Citadel (acting as Certificate Authority), citadel agent, etc. istio/proxy . The Istio proxy contains extensions to the Envoy proxy (in the form of Envoy filters) that support authentication, authorization, and telemetry collection.","title":"Repositories"},{"location":"getting-started/Readme/#issue_management","text":"We use GitHub to track all of our bugs and feature requests. Each issue we track has a variety of metadata: Epic . An epic represents a feature area for Istio as a whole. Epics are fairly broad in scope and are basically product-level things. Each issue is ultimately part of an epic. Milestone . Each issue is assigned a milestone. This is 0.1, 0.2, ..., or 'Nebulous Future'. The milestone indicates when we think the issue should get addressed. Priority . Each issue has a priority which is represented by the column in the Prioritization project. Priority can be one of P0, P1, P2, or >P2. The priority indicates how important it is to address the issue within the milestone. P0 says that the milestone cannot be considered achieved if the issue isn't resolved.","title":"Issue management"},{"location":"getting-started/docker/","text":"Start with Docker \u00b6 Public docker image \u00b6 Package peaceiris/mkdocs-material docker-compose \u00b6 Here is an example docker-compose.yml Please check the latest tag before you go. docker-compose up Go to http://localhost:8000/","title":"Docker"},{"location":"getting-started/docker/#start_with_docker","text":"","title":"Start with Docker"},{"location":"getting-started/docker/#public_docker_image","text":"Package peaceiris/mkdocs-material","title":"Public docker image"},{"location":"getting-started/docker/#docker-compose","text":"Here is an example docker-compose.yml Please check the latest tag before you go. docker-compose up Go to http://localhost:8000/","title":"docker-compose"},{"location":"getting-started/download-boilerplate/","text":"Download boilerplate \u00b6 Git clone \u00b6 git clone https://github.com/peaceiris/mkdocs-material-boilerplate.git cd mkdocs-material-boilerplate Download zip \u00b6 wget 'https://github.com/peaceiris/mkdocs-material-boilerplate/archive/main.zip' unzip main.zip cd mkdocs-material-boilerplate-main \ud83d\udc49 Click me to download zip","title":"Download boilerplate"},{"location":"getting-started/download-boilerplate/#download_boilerplate","text":"","title":"Download boilerplate"},{"location":"getting-started/download-boilerplate/#git_clone","text":"git clone https://github.com/peaceiris/mkdocs-material-boilerplate.git cd mkdocs-material-boilerplate","title":"Git clone"},{"location":"getting-started/download-boilerplate/#download_zip","text":"wget 'https://github.com/peaceiris/mkdocs-material-boilerplate/archive/main.zip' unzip main.zip cd mkdocs-material-boilerplate-main \ud83d\udc49 Click me to download zip","title":"Download zip"},{"location":"getting-started/invoke/","text":"Serve and open with invoke \u00b6 invoke \u00b6 Invoke is a Python (2.7 and 3.4+) library for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks. It draws inspiration from various sources (make/rake, Fabric 1.x, etc) to arrive at a powerful & clean feature set. pyinvoke/invoke: Pythonic task management & command execution. Serve and open \u00b6 Run mkdocs serve and open browser automatically. inv serve Serving on localhost:8000 # set IP and port inv serve --dev-addr 'localhost:5000' # set config file inv serve --config-file ./mkdocs-sample.yml Show all tasks \u00b6 $ inv --list Available tasks: serve Serve site and open browser Show task help. $ inv serve --help Usage: inv [ oke ] [ --core-opts ] serve [ --options ] [ other tasks here ... ] Docstring: Serve site and open browser Options: -c STRING, --config-file = STRING Provide a specific MkDocs config -d STRING, --dev-addr = STRING IP address and port to serve documentation locally ( default: localhost:8000 ) Tasks are defined by tasks.py","title":"invoke"},{"location":"getting-started/invoke/#serve_and_open_with_invoke","text":"","title":"Serve and open with invoke"},{"location":"getting-started/invoke/#invoke","text":"Invoke is a Python (2.7 and 3.4+) library for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks. It draws inspiration from various sources (make/rake, Fabric 1.x, etc) to arrive at a powerful & clean feature set. pyinvoke/invoke: Pythonic task management & command execution.","title":"invoke"},{"location":"getting-started/invoke/#serve_and_open","text":"Run mkdocs serve and open browser automatically. inv serve Serving on localhost:8000 # set IP and port inv serve --dev-addr 'localhost:5000' # set config file inv serve --config-file ./mkdocs-sample.yml","title":"Serve and open"},{"location":"getting-started/invoke/#show_all_tasks","text":"$ inv --list Available tasks: serve Serve site and open browser Show task help. $ inv serve --help Usage: inv [ oke ] [ --core-opts ] serve [ --options ] [ other tasks here ... ] Docstring: Serve site and open browser Options: -c STRING, --config-file = STRING Provide a specific MkDocs config -d STRING, --dev-addr = STRING IP address and port to serve documentation locally ( default: localhost:8000 ) Tasks are defined by tasks.py","title":"Show all tasks"},{"location":"getting-started/pip/","text":"Start with pip (Anaconda, Miniconda) \u00b6 pip install -r requirements.txt pip install -r requirements-dev.txt inv command is also available.","title":"pip"},{"location":"getting-started/pip/#start_with_pip_anaconda_miniconda","text":"pip install -r requirements.txt pip install -r requirements-dev.txt inv command is also available.","title":"Start with pip (Anaconda, Miniconda)"},{"location":"getting-started/pipenv/","text":"Start with pipenv \u00b6 pipenv \u00b6 Pipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. pypa/pipenv: Python Development Workflow for Humans. Install all packages \u00b6 pipenv sync --dev # Installs all packages specified in Pipfile.lock. Run MkDocs \u00b6 pipenv shell # Spawns a shell within the virtualenv. mkdocs serve Or, run mkdocs with pipenv run pipenv run mkdocs serve pipenv run \u00b6 pipenv task are also defined by Pipfile pipenv run version # mkdocs --version pipenv run help # mkdocs --help pipenv run inv serve # inv serve pipenv run serve # mkdocs serve pipenv run build # mkdocs build pipenv run deploy # mkdocs gh-deploy","title":"pipenv"},{"location":"getting-started/pipenv/#start_with_pipenv","text":"","title":"Start with pipenv"},{"location":"getting-started/pipenv/#pipenv","text":"Pipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. pypa/pipenv: Python Development Workflow for Humans.","title":"pipenv"},{"location":"getting-started/pipenv/#install_all_packages","text":"pipenv sync --dev # Installs all packages specified in Pipfile.lock.","title":"Install all packages"},{"location":"getting-started/pipenv/#run_mkdocs","text":"pipenv shell # Spawns a shell within the virtualenv. mkdocs serve Or, run mkdocs with pipenv run pipenv run mkdocs serve","title":"Run MkDocs"},{"location":"getting-started/pipenv/#pipenv_run","text":"pipenv task are also defined by Pipfile pipenv run version # mkdocs --version pipenv run help # mkdocs --help pipenv run inv serve # inv serve pipenv run serve # mkdocs serve pipenv run build # mkdocs build pipenv run deploy # mkdocs gh-deploy","title":"pipenv run"},{"location":"hosting-and-deployment/aws-amplify-console/","text":"Host on AWS Amplify Console \u00b6 AWS Amplify Console You can use Password protection each branch. Use the following build specification YML file. mkdocs-material-boilerplate/amplify.yml","title":"AWS Amplify Console"},{"location":"hosting-and-deployment/aws-amplify-console/#host_on_aws_amplify_console","text":"AWS Amplify Console You can use Password protection each branch. Use the following build specification YML file. mkdocs-material-boilerplate/amplify.yml","title":"Host on AWS Amplify Console"},{"location":"hosting-and-deployment/combinations/","text":"Hosting and Deployment \u00b6 GitHub Pages and GitHub \u00b6 Host source code on GitHub. Build and deploy with: mkdocs gh-deploy GitHub Actions GitLab Pages and GitLab \u00b6 Host source code on GitLab. Build and deploy with GitLab CI/CD. Netlify \u00b6 Host source code on: GitHub GitLab BitBucket Build and deploy with Netlify. AWS Amplify Console \u00b6 Host source code on: GitHub GitLab BitBucket AWS CodeCommit Build and deploy with AWS Amplify Console.","title":"Combinations"},{"location":"hosting-and-deployment/combinations/#hosting_and_deployment","text":"","title":"Hosting and Deployment"},{"location":"hosting-and-deployment/combinations/#github_pages_and_github","text":"Host source code on GitHub. Build and deploy with: mkdocs gh-deploy GitHub Actions","title":"GitHub Pages and GitHub"},{"location":"hosting-and-deployment/combinations/#gitlab_pages_and_gitlab","text":"Host source code on GitLab. Build and deploy with GitLab CI/CD.","title":"GitLab Pages and GitLab"},{"location":"hosting-and-deployment/combinations/#netlify","text":"Host source code on: GitHub GitLab BitBucket Build and deploy with Netlify.","title":"Netlify"},{"location":"hosting-and-deployment/combinations/#aws_amplify_console","text":"Host source code on: GitHub GitLab BitBucket AWS CodeCommit Build and deploy with AWS Amplify Console.","title":"AWS Amplify Console"},{"location":"hosting-and-deployment/github-pages/","text":"Host on GitHub Pages \u00b6 Demo site on GitHub Pages (build & deploy with GitHub Actions) Build and deploy with GitHub Actions \u00b6 peaceiris/actions-gh-pages: GitHub Actions for deploying to GitHub Pages with Static Site Generators Go to the repository and read the latest README.md for more details. Build and deploy with mkdocs gh-deploy \u00b6 pipenv \u00b6 pipenv run deploy # OR pipenv shell mkdocs gh-deploy # OR pipenv run mkdocs gh-deploy","title":"GitHub Pages"},{"location":"hosting-and-deployment/github-pages/#host_on_github_pages","text":"Demo site on GitHub Pages (build & deploy with GitHub Actions)","title":"Host on GitHub Pages"},{"location":"hosting-and-deployment/github-pages/#build_and_deploy_with_github_actions","text":"peaceiris/actions-gh-pages: GitHub Actions for deploying to GitHub Pages with Static Site Generators Go to the repository and read the latest README.md for more details.","title":"Build and deploy with GitHub Actions"},{"location":"hosting-and-deployment/github-pages/#build_and_deploy_with_mkdocs_gh-deploy","text":"","title":"Build and deploy with mkdocs gh-deploy"},{"location":"hosting-and-deployment/github-pages/#pipenv","text":"pipenv run deploy # OR pipenv shell mkdocs gh-deploy # OR pipenv run mkdocs gh-deploy","title":"pipenv"},{"location":"hosting-and-deployment/gitlab-pages/","text":"Host on GitLab Pages \u00b6 See .gitlab-ci.yml","title":"GitLab Pages"},{"location":"hosting-and-deployment/gitlab-pages/#host_on_gitlab_pages","text":"See .gitlab-ci.yml","title":"Host on GitLab Pages"},{"location":"hosting-and-deployment/netlify/","text":"Host on Netlify \u00b6 Demo site on Netlify (build & deploy with Netlify) Create GitHub repository and deploy to Netlify with the following button in 1 min.","title":"Netlify"},{"location":"hosting-and-deployment/netlify/#host_on_netlify","text":"Demo site on Netlify (build & deploy with Netlify) Create GitHub repository and deploy to Netlify with the following button in 1 min.","title":"Host on Netlify"}]}